- content_for :header do
  = render 'layouts/registration_header'
.page-content
  %section
    %section.entity-company.taxonomy-view
      %header.ui-box.taxonomy-head{"data-section" => "toggle-head", "data-toggle-container" => ""}
        .entity-head{"data-ignore-global-close" => "1", "data-target" => "toggle-head", "data-type" => "cm-toggle"}
          %h1= @owned_company.company_name
          .ui-panel-toggle.icon-cr-plus-full
        .entity-info.grid.columns-3.ui-panel{"data-section" => "toggle-head", "data-slide-open" => ""}
          .grid-4-12
            %h3 Company Address
            %p= @owned_company.address
          .grid-4-12
            %h3 Company Contract POC
            %p.name= @owned_company.owner.full_name.split.map(&:capitalize).join(' ')
            %p.email= @owned_company.owner.email
            %p= @owned_company.work_phone
          .grid-4-12
            %h3 Company Documents
            %ul.doc-list
              %li
                = link_to_if(@owned_company.gsc.present?, @owned_company.gsc_file_name, download_gsc_path(@owned_company), target: '_blank') {}
              %li
                = link_to_if(@owned_company.contract.present?, @owned_company.contract_file_name, download_contract_rider_path(@owned_company), target: '_blank') {}
      %section.taxonomy-units
        %section.row.unit-maximized.connect-rule-up
          %header.unit-head.invalid
            %form
              - if @account_manager.business_unit_names.count == 1
                %input{placeholder: "Concept Design", type: "text", value: "#{@account_manager.business_unit_names.first.name}", id: 'business_unit_name'}
              - else
                = select_tag "business_unit_names",
                  options_from_collection_for_select(@account_manager.business_unit_names.order(id: :asc), "id", "name")
          %section.ui-tabs
            %article.tab-panel.is-open
              .section-intro.align-left
                %h1.section-title Assign Unit Roles
                %p.section-description.grid-8-12
                  Add brief description here lorem ipsum sit amet quosque tandem set numa consect. Ipsum sit amet quosque tandem set numa consect. Click on the button below if you want to learn more about
                  = link_to workflow_users_path, style: "color: #7a7a7a;", target: '_blank' do
                    our systems automated workflows for
                    = succeed "." do
                      %strong.type-primary work authorizations
                  %br/
                = link_to 'Learn More', workflow_users_path, class: 'button-primary small align-left', target: '_blank'
                %a.type-primary.hidden{:href => ""} Learn More About Work Authorization Automated Workflow
                %figure.figure-business-unit
                  = image_tag 'infographics_unit_role2.png'
              .grid.columns-3.unit-roles-grid
                .grid-4-12.unit-role.icon-profile2
                  %h2 Selection Authorities
                  %p Searches and selects consultants to work on projects, documents draft statement of work and other work agreement terms with consultant.
                  %a.button-cta.button-primary.small.modal-toggle{"data-type" => "cm-modal", 'data-modal-target'=> "assign-modal"} Assign Role
                .grid-4-12.unit-role.icon-profile2
                  %h2 Requisition Authority
                  %p Receives the draft SOW and preliminary terms from the Selection Authority. Then authors a Requisition to for Consultant to support the Client Company.
                  %a.button-cta.button-primary.small.modal-toggle{"data-type" => "cm-modal", 'data-modal-target'=> "assign-modal"} Assign Role
                .grid-4-12.unit-role.icon-profile2
                  %h2 Approval Authority
                  %p Approves the Statement of Work and other consulting terms resulting from the negotiation process, the issues PO authorizing work to start.
                  %a.button-cta.button-primary.small.modal-toggle{"data-type" => "cm-modal", 'data-modal-target'=> "assign-modal"} Assign Role
        %section.hidden
%section.ui-modal{'data-name'=>"assign-modal"}
  .modal-box
    %header
      %h1 Assign Selection Authority Role
    .modal-content
      .modal-scroller
        = simple_form_for @unit_role, url: business_unit_roles_path,
          remote: true, html: { data: { modal: true, type: :json }, class: 'theme-gces', id: 'unit_role_form' } do |f|
          = render 'shared/base_error', model: @unit_role
          %section.ui-card
            .hide
              = f.input :business_unit_name_id, required: false, placeholder: 'Email', label: false,
                input_html: {value: @account_manager.business_unit_names.first.id}
            = f.input :email, required: false, placeholder: 'Email', label: false,
            :url => autocomplete_user_email_business_unit_roles_path, :as => :autocomplete,
            wrapper: :custom_input, input_wrapper_html: { class: 'icon-email' }
            .grid.columns-2.margin-top-1r{:role => "grid"}
              .grid-6-12{:role => "gridcell"}
                = f.input :first_name, required: false, placeholder: 'First Name', label: false,
                  wrapper: :custom_input, input_wrapper_html: { class: 'icon-profile' }
              .grid-6-12{:role => "gridcell"}
                = f.input :last_name, required: false, placeholder: 'Last Name', label: false,
                  wrapper: :custom_input, input_wrapper_html: { class: 'icon-profile' }
            .section-block.user-permissions.align-left
              %h3 Notes:
              %ul.list
                %li.type-intro You can assign this person to one or all three roles listed below.
                %li.type-intro
                  An unlimited number of people may perform the
                  %span.type-primary Selection Authority
                  role.
                %li.type-intro
                  Only one person may perform the
                  %span.type-primary Requisition Authority
                  and
                  %span.type-primary Approval Authority
                  roles.
              %section.card-section
                .ui-checkbox.medium
                  = f.check_box :selection_authority, {id: 'selection-authority'}
                  %label{:for => "selection-authority"} Selection Authority
                .button-circle.icon-question{"data-placement" => "bottom", "data-template" => "question-sample1b", "data-type" => "cm-popover"}
                  %div{"data-type" => "template-question-sample1b"}
                    %p Include explanation about this section here.
              %section.card-section
                .ui-checkbox.medium
                  = f.check_box :requisition_authority, {id: 'requisition-authority'}
                  %label{:for => "requisition-authority"} Requisition Authority
                .button-circle.icon-question{"data-placement" => "bottom", "data-template" => "question-sample1b", "data-type" => "cm-popover"}
                  %div{"data-type" => "template-question-sample1b"}
                    %p Include explanation about this section here.
              %section.card-section
                .ui-checkbox.medium
                  = f.check_box :approval_authority, {id: 'approval-authority'}
                  %label{:for => "approval-authority"} Approval Authority
                .button-circle.icon-question{"data-placement" => "bottom", "data-template" => "question-sample1b", "data-type" => "cm-popover"}
                  %div{"data-type" => "template-question-sample1b"}
                    %p Include explanation about this section here.
              %section.card-section
                = hidden_field_tag 'business_unit_role[authority_required]'
            = f.submit 'Add Unit Roles', class: 'button-primary button-cta submit-button'
    %footer
      .modal-close.ui-action-icon.icon-cr-cross-light{"data-modal-close" => ""}



- content_for :footer do
  %footer#main-footer{:role => "contentinfo"}
    %p.site-credits &copy; 2015 Playground
  .ui-popover
- content_for :js do
  :javascript
    (function () {
        $(function () {
            var eventEmitter = $(document);

            eventEmitter.on('cm.toggle.close', function (event, data) {
                $('.entity-taxonomy').removeClass('is-open');
            });

            eventEmitter.on('cm.toggle.open', function (event, data) {
                if (data['toggle-head'] === undefined) {
                    $('.entity-taxonomy').addClass('is-open');
                }
            });
        });
    })();
